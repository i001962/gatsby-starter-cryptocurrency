#!/usr/bin/env node

const { readFileSync, writeFile, readdirSync } = require('fs')
const { join, resolve } = require('path')
const jsyaml = require('js-yaml')

const fileProcessor = require('../src/lib/fileProcessor')
const versionHelper = require('../src/lib/versionHelper')

const {
  docs: { current, versions, docPagesDirectory }
} = require('../config')

versions.push(current)
versions.forEach(version => {
  const docs = { chapters: [] }
  const versionDirectory = versionHelper.getPrefixedVersion(version)
  const dir = `${docPagesDirectory}${versionDirectory}`
  const outlinePath = `${dir}/outline.yaml`
  const loadedOutline = jsyaml.safeLoad(readFileSync(outlinePath, 'utf8'))
  const versionPath = join(docPagesDirectory, versionDirectory)

  docs.chapters = loadedOutline.chapters.map(chapter => {
    const chapterPath = join(versionPath, chapter.path)
    const files = readdirSync(chapterPath)
      .filter(file => file.endsWith('.md'))
      .map(file => file.slice(0, -3))

    chapter.items = chapter.items.filter(item => files.includes(item))

    const items = [...new Set(chapter.items.concat(files))].map(
      file => fileProcessor.processFile(resolve(chapterPath), file)[0]
    )

    return { ...chapter, items }
  })

  writeFile(
    resolve(join(versionPath, 'nav.yml')),
    jsyaml.safeDump(docs, { lineWidth: 255 }),
    error => error && console.warn(error)
  )
})
